// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpreadShirtShop.Data;

#nullable disable

namespace SpreadShirtShop.Migrations
{
    [DbContext(typeof(SpreadShirtShopContext))]
    [Migration("20220426215303_AddedProductTypeDepartments")]
    partial class AddedProductTypeDepartments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppearanceColors", b =>
                {
                    b.Property<int>("AppearancesId")
                        .HasColumnType("int");

                    b.Property<string>("ColorsValue")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AppearancesId", "ColorsValue");

                    b.HasIndex("ColorsValue");

                    b.ToTable("AppearanceColors (Dictionary<string, object>)");
                });

            modelBuilder.Entity("AppearancePrintType", b =>
                {
                    b.Property<int>("AppearancesId")
                        .HasColumnType("int");

                    b.Property<string>("PrintTypesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AppearancesId", "PrintTypesId");

                    b.HasIndex("PrintTypesId");

                    b.ToTable("AppearancePrintType (Dictionary<string, object>)");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Appearance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SellableId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("SellableId");

                    b.ToTable("Appearance");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSingular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeDepartmentId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Colors", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.HasKey("Value");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyPattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecimalPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultLanguageId")
                        .HasColumnType("int");

                    b.Property<double>("DefaultVatRate")
                        .HasColumnType("float");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LengthUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThousandsSeparator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DefaultLanguageId");

                    b.HasIndex("LengthUnit");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("DecimalCount")
                        .HasColumnType("float");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.CurrencyPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyPrice");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImageModel");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Length", b =>
                {
                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("UnitFactor")
                        .HasColumnType("float");

                    b.HasKey("Unit");

                    b.ToTable("Length");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ValueId");

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.MeasureValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MeasureValue");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.PrintType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrintType");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomsTariffCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GiftWrappingSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturingCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<double>("ShippingFactor")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeFitHint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturingCountryId");

                    b.HasIndex("PriceId");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductTypeDepartment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LifeCycleState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProductTypeDepartment");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductTypePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("Vat")
                        .HasColumnType("float");

                    b.Property<double>("VatExcluded")
                        .HasColumnType("float");

                    b.Property<double>("VatIncluded")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ProductTypePrice");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Resource", b =>
                {
                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Href");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Sellable", b =>
                {
                    b.Property<string>("SellableId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DefaultAppearanceId")
                        .HasColumnType("int");

                    b.Property<string>("IdeaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainDesignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviewImageId")
                        .HasColumnType("int");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("SellableId");

                    b.HasIndex("PreviewImageId");

                    b.HasIndex("PriceId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Sellable");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ShippingCountry", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Customs")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExternamFullfillmentSupported")
                        .HasColumnType("bit");

                    b.Property<string>("IsoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShippingSupported")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ShippingCountry");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ShippingState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("ExternalFullfillmentSupported")
                        .HasColumnType("bit");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShippingCountryId")
                        .HasColumnType("int");

                    b.Property<bool>("ShippingSupported")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ShippingCountryId");

                    b.ToTable("ShippingState");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.StockState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AppearanceId")
                        .HasColumnType("int");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppearanceId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("SizeId");

                    b.ToTable("StockState");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SellableId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SellableId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountStatus")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.WashingInstruction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("WashingInstruction");
                });

            modelBuilder.Entity("AppearanceColors", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Appearance", null)
                        .WithMany()
                        .HasForeignKey("AppearancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.Colors", null)
                        .WithMany()
                        .HasForeignKey("ColorsValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppearancePrintType", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Appearance", null)
                        .WithMany()
                        .HasForeignKey("AppearancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.PrintType", null)
                        .WithMany()
                        .HasForeignKey("PrintTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Appearance", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.ProductType", null)
                        .WithMany("Appearances")
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("SpreadShirtShop.Models.Sellable", null)
                        .WithMany("Appearances")
                        .HasForeignKey("SellableId");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Category", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.ProductTypeDepartment", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProductTypeDepartmentId");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Country", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.Language", "DefaultLanguage")
                        .WithMany()
                        .HasForeignKey("DefaultLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.Length", "Length")
                        .WithMany()
                        .HasForeignKey("LengthUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("DefaultLanguage");

                    b.Navigation("Length");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.CurrencyPrice", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Measure", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.MeasureValue", "Value")
                        .WithMany()
                        .HasForeignKey("ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Value");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductType", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Category", null)
                        .WithMany("ProductTypes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("SpreadShirtShop.Models.ShippingCountry", "ManufacturingCountry")
                        .WithMany()
                        .HasForeignKey("ManufacturingCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.ProductTypePrice", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManufacturingCountry");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductTypePrice", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Sellable", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.ImageModel", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.CurrencyPrice", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpreadShirtShop.Models.ProductType", "ProductType")
                        .WithMany("Sellables")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PreviewImage");

                    b.Navigation("Price");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ShippingState", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.ShippingCountry", null)
                        .WithMany("ShippingStates")
                        .HasForeignKey("ShippingCountryId");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Size", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.ProductType", null)
                        .WithMany("Sizes")
                        .HasForeignKey("ProductTypeId");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.StockState", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Appearance", "Appearance")
                        .WithMany()
                        .HasForeignKey("AppearanceId");

                    b.HasOne("SpreadShirtShop.Models.ProductType", null)
                        .WithMany("StockStates")
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("SpreadShirtShop.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Appearance");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Tag", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.Sellable", null)
                        .WithMany("Tags")
                        .HasForeignKey("SellableId");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.WashingInstruction", b =>
                {
                    b.HasOne("SpreadShirtShop.Models.ProductType", null)
                        .WithMany("WashingInstructions")
                        .HasForeignKey("ProductTypeId");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Category", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductType", b =>
                {
                    b.Navigation("Appearances");

                    b.Navigation("Sellables");

                    b.Navigation("Sizes");

                    b.Navigation("StockStates");

                    b.Navigation("WashingInstructions");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ProductTypeDepartment", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.Sellable", b =>
                {
                    b.Navigation("Appearances");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("SpreadShirtShop.Models.ShippingCountry", b =>
                {
                    b.Navigation("ShippingStates");
                });
#pragma warning restore 612, 618
        }
    }
}
